package visitor;import syntaxtree.Type;import java.util.Hashtable;class SymbolTable {    private Hashtable<String, Class> hashtable;    public SymbolTable() {        hashtable = new Hashtable<String, Class>();    }    public boolean addClass(String id, String parent) {        if(containsClass(id)) {            return false;        } else {            hashtable.put(id, new Class(id, parent));            return true;        }    }    public Class getClass(String id) {        if(containsClass(id)) {            return hashtable.get(id);        } else {            return null;        }    }    public boolean containsClass(String id) {        return hashtable.containsKey(id);    }    public boolean compareTypes(String retType, String accept) {        return false;    }    public Type getVarType(Method currMethod, Class currClass, String toString) {        return null;    }    public Method getMethod(String mname, String cname) {        return null;    }    public Type getMethodType(String mname, String cname) {        return null;    }}